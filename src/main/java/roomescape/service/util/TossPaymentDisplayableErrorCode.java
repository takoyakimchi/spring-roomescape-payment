package roomescape.service.util;

import java.util.Arrays;

public enum TossPaymentDisplayableErrorCode {

    ALREADY_PROCESSED_PAYMENT("ALREADY_PROCESSED_PAYMENT"),
    EXCEED_MAX_CARD_INSTALLMENT_PLAN("EXCEED_MAX_CARD_INSTALLMENT_PLAN"),
    NOT_ALLOWED_POINT_USE("NOT_ALLOWED_POINT_USE"),
    INVALID_REJECT_CARD("INVALID_REJECT_CARD"),
    BELOW_MINIMUM_AMOUNT("BELOW_MINIMUM_AMOUNT"),
    INVALID_CARD_EXPIRATION("INVALID_CARD_EXPIRATION"),
    INVALID_STOPPED_CARD("INVALID_STOPPED_CARD"),
    EXCEED_MAX_DAILY_PAYMENT_COUNT("EXCEED_MAX_DAILY_PAYMENT_COUNT"),
    NOT_SUPPORTED_INSTALLMENT_PLAN_CARD_OR_MERCHANT("NOT_SUPPORTED_INSTALLMENT_PLAN_CARD_OR_MERCHANT"),
    INVALID_CARD_INSTALLMENT_PLAN("INVALID_CARD_INSTALLMENT_PLAN"),
    NOT_SUPPORTED_MONTHLY_INSTALLMENT_PLAN("NOT_SUPPORTED_MONTHLY_INSTALLMENT_PLAN"),
    EXCEED_MAX_PAYMENT_AMOUNT("EXCEED_MAX_PAYMENT_AMOUNT"),
    INVALID_CARD_LOST_OR_STOLEN("INVALID_CARD_LOST_OR_STOLEN"),
    RESTRICTED_TRANSFER_ACCOUNT("RESTRICTED_TRANSFER_ACCOUNT"),
    INVALID_CARD_NUMBER("INVALID_CARD_NUMBER"),
    EXCEED_MAX_ONE_DAY_WITHDRAW_AMOUNT("EXCEED_MAX_ONE_DAY_WITHDRAW_AMOUNT"),
    EXCEED_MAX_ONE_TIME_WITHDRAW_AMOUNT("EXCEED_MAX_ONE_TIME_WITHDRAW_AMOUNT"),
    EXCEED_MAX_AMOUNT("EXCEED_MAX_AMOUNT"),
    INVALID_ACCOUNT_INFO_RE_REGISTER("INVALID_ACCOUNT_INFO_RE_REGISTER"),
    NOT_AVAILABLE_PAYMENT("NOT_AVAILABLE_PAYMENT"),
    REJECT_ACCOUNT_PAYMENT("REJECT_ACCOUNT_PAYMENT"),
    REJECT_CARD_PAYMENT("REJECT_CARD_PAYMENT"),
    REJECT_TOSSPAY_INVALID_ACCOUNT("REJECT_TOSSPAY_INVALID_ACCOUNT"),
    EXCEED_MAX_AUTH_COUNT("EXCEED_MAX_AUTH_COUNT"),
    EXCEED_MAX_ONE_DAY_AMOUNT("EXCEED_MAX_ONE_DAY_AMOUNT"),
    NOT_AVAILABLE_BANK("NOT_AVAILABLE_BANK"),
    INVALID_PASSWORD("INVALID_PASSWORD"),
    FDS_ERROR("FDS_ERROR"),
    UNKNOWN_PAYMENT_ERROR("UNKNOWN_PAYMENT_ERROR"),
    NOT_DISPLAYABLE_ERROR("NOT_DISPLAYABLE_ERROR"),
    ;

    private final String errorCode;

    TossPaymentDisplayableErrorCode(String errorCode) {
        this.errorCode = errorCode;
    }

    public static TossPaymentDisplayableErrorCode from(String errorCode) {
        return Arrays.stream(TossPaymentDisplayableErrorCode.values())
            .filter(value -> errorCode.equals(value.errorCode))
            .findFirst()
            .orElse(NOT_DISPLAYABLE_ERROR);
    }
}
